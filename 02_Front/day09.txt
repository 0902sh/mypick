Day9

1. Web
(1) 웹의 기본 목적
    다른 컴퓨터에서 문서를 공유하거나 보는 목적

(2) 웹의 구조
    인터넷을 활용하여 WWW(World Wide Web)
    웹 문서를 인터넷 상의 컴퓨터끼리
    주고받는 네트워크 시스템

(3) 웹의 구성
    웹 서버 - 웹 클라이언트

    1) 웹 클라이언트
        사용자 인터페이스 담당
        웹 서버에 웹 문서(페이지) 요청
        웹 문서를 받아서 화면에 display

    2) 웹 서버
        웹 사이트를 탑재한 컴퓨터
        웹 문서, 이미지, 동영상 등 데이터 저장

    3) 웹 컨테이너
        동적인 데이터가 들어왔을 때
        서버가 연산을 요청하는 곳
        이후 연산이 종료되면 정제된 데이터
        (JSP, Servlet)로 서버에 돌려준다.

    4) WAS(Web Application Server)
       WAS = Web 서버 + 컨테이너
       WEB + WAS + DB를 3-tier 구조라고 함

2. 인터넷(Internet)
    - 웹의 개념이 나오기 전 만들어진
      컴퓨터 연결 네트워크
    - 1969년 미 국방성 고등 연구 계획국(ARPA)
      여러 대학교와 계약 업체 사이의 컴퓨터 연결
    - 컴퓨터마다 고유한 주소(IP)를 부여하여
      컴퓨터 연결

3. WWW
    - 인터넷을 활용한 응용 서비스 중 하나
    - 웹 서버와 웹 브라우저로 구성되는
      정보 전달 및 공유 서비스
    - 인터넷 : 고속도로, WWW : 물류배송

4. 웹 브라우저
    Netcsape Navigator
    - 일반인도 쉽게 사용 가능한 GUI를 갖는
      최초의 브라우저

    Internet Explorer
    - 1955년 마이크로소프트에서 개발
    - 윈도우 운영체제(Windows 95)
    - 순식간에 NetScape를 잠식

    Opera
    - 프로그램 크기가 작고, 렌더링 빠름

    Safari
    - 2003년 Apple에서 개발
    - Mac OS, 모바일 IOS에서 실행

    FireFox(파폭, 불여우)
    - 2002년 개발, 웹 표준 기구(W3C)의 표준에 
    - 개발자에게 많은 편의성 제공
    - NetScape가 개발하고 소스 공개

    Chrome
    - 2008년 구글에서 개발, 새로운 강자
    - 현재 가장 많은 사용자 보유

    Microsoft Edge
    - Explorer를 완전 포기
    - Chronium을 인수하여 확장 개발

5. 웹의 성공
    - Tim Berner-Lee의 아이디어
    - 1989년 웹 개념을 제안 
      -> 1990년 WWW 프로젝트 시작
    - 서버와 클라이언트로 동작되는 http 모델 창시
    - 웹 페이지는 일반 텍스트 문서 
      -> 편집기는 아무거나
    - http
        웹 브라우저가 웹 페이지를 서버로부터 전송받는다.
        다 전송받으면 웹 서버와 접속이 끊어짐
        웹 서버와 웹 브라우저의 역할, 작업 분담
        웹 서버의 낮은 부하로 많은 동접자 지원

6. HTML, CSS, Javascript
(1) 웹 페이지 구성의 3대장
    - HTML : 웹 페이지의 구성(구조)와 내용
    - CSS : 웹 페이지의 모양
    - Javascript : 웹 페이지의 행동 및 응용
(2) HTML5
    - 표준화된 태그로 웹 페이지를 작성하는 언어
    - 프로그래밍 언어는 아님
      -> 프로그램 제어가 불가, 단지 해석만 함
    - 비표준 기술 혼재, 웹 브라우저의 비호환성
      ActiveX, 플러그인, 플래시(Flash)
    - 인터넷 기기의 다양화
      PC와 모바일에서 모두 웹 사용
      -> 기존 페이지가 모바일에서 미작동
    - 새로운 웹 표준의 필요성 -> HTML5 + CSS
(3) CSS3(Cascading Style Sheet)
    - 구체적으로 어떤 스타일로 요소가 표시될 지 정하는 규격
    - HTML로 문서 구조 및 꾸미기를 할 수 있으나
      동일한 디자인을 사용하는 페이지가 여러 개가 있다
    - CSS는 웹 페이지에서 내용과 스타일을 분리
(4) XML(Extensible Markup Language)
    - 태그로 데이터를 설명
    <Cat>
        <Cat>
            <Age>1<\Age>
        <\Cat>
        <Cat>
        ....
    <\Cats>
(5) 인코딩
    1) EUC-KR
        완성형, 만들어져 있는 글자를 사용
    2) UTF-8
        조합형, 글자를 만들기 위한 요소들을 찾아서 사용
(6) 웹 접근성
    모든 사용자가 신체적, 환경적 제한 없이 웹에 접속해야된다
    마우스가 없어서 키보드로만 조작해야 하면?
    신체적 장애로 특수 환경에서 접속하거나
    모바일 환경에서 접속하는 경우 등을 모두 충족해야 함

7. HTML의 요소
    <p>My Name is None</p>
    1  2              3

    1 : Opening Tag : 요소의 이름과 <>로 구성
    2 : Contents : 요소의 내용이며 text라는 용어로 표현됨
    3 : Closing Tag : 1과 같지만 이름 앞에 /가 붙음

8. Nested Elements(중첩) 구조
    요소 안에 요소를 넣는 것
    <p>I'm<strong>very hungry</strong>.</p>

9. Paragraph Tag(단락)
    단락 : 내용상 끊어서 구분할 수 있는 하나의 부분
          다른말로 문단이라고도 함
    <p> 태그로 단락을 표현

    단락 제목 태그 : <h1> ~ <h6>

10. 서식 태그
    <strong>, <b> : 강조(진한 글씨), strong이 접근성 높음
    <em>, <i> : 글씨 기울이기(이탤릭체), em이 접근성 높음
    <mark> : 하이라이트(형광)
    <del> : 취소선, 텍스트 중간에 가로줄 만들기
    <ins> : 텍스트 아래에 줄긋기
    <sup>, <sub> : 위 첨자, 아래 첨자